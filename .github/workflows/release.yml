name: release

on:
  # workflow_dispatch:
  release:
    types:
      - published
      - created
      - released

jobs:
  publish:
    if: ${{ !github.event.release.draft }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Check release details
        run: |
          echo 'action: ${{ github.event.action }}'
          echo 'name: ${{ github.event.release.name }}'
          echo 'tag_name: ${{ github.event.release.tag_name }}'
          echo 'draft: ${{ github.event.release.draft }}'
          echo 'contains_zip: ${{ contains(github.event.release.assets.*.content_type, 'application/zip') }}'

      - uses: actions/checkout@v3

      - name: Add files and publish release
        env:
          GITHUB_TOKEN: ${{ github.token }}
          TAG_NAME: ${{ github.event.release.tag_name }}
        run: |
            sed -i "s/__VERSION__/${TAG_NAME#v}/" fingeringdiagram.qml
            zip fingering-diagram-${TAG_NAME}.zip fingeringdiagram.qml LICENSE README.md
            gh release upload ${TAG_NAME} fingering-diagram-${TAG_NAME}.zip

  label:
    needs: [publish]
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      repository-projects: read
    steps:
      - name: Add label to PR
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh label create --color '#ededed' 'autorelease: published' 2> /dev/null || echo 'Label exists'
          PR_NUMBER=$(gh pr list --state merged --label 'autorelease: tagged' --json number --jq '.[0].number')
          gh pr edit ${PR_NUMBER} --add-label 'autorelease: published'

  comments:
    needs: [publish]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - uses: apexskier/github-release-commenter@v1
        with:
          GITHUB_TOKEN: ${{ github.token }}
          comment-template: |
            :tada: This change has been included in version {release_name} :tada:

            The release is available on:
            - `{release_tag}`
            - [GitHub release]({release_link})

            Your **[release-please](https://github.com/googleapis/release-please)** bot :rocket::pray:
